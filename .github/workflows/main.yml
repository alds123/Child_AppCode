name: Run Appium Tests on Android Emulator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 📥 Install Android system image (ARM64)
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "emulator" \
            "system-images;android-34;google_apis;arm64-v8a"

      - name: 📱 Create AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager \
            create avd -n test -k "system-images;android-34;google_apis;arm64-v8a" --device "pixel"

      - name: 🚀 Start Emulator
        run: |
          echo "📍 Add emulator and platform-tools to PATH"
          export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH

          echo "🧰 Accept licenses if not already done"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          echo "📦 Start emulator in background"
          nohup emulator -avd test -no-audio -no-window -gpu off &

          echo "🧲 Waiting for emulator to be ready"
          adb wait-for-device

          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "⏳ Still booting..."
            sleep 5
          done
          echo "✅ Emulator booted"

      - name: 🧪 Run Tests
        run: mvn clean test
