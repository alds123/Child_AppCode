name: Mobile Automation CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android-tests:
    runs-on: macos-13

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    # Install latest Android Command Line Tools
    - name: Install Android Command Line Tools
      run: |
        brew install --cask android-commandlinetools
        echo "export ANDROID_HOME=$HOME/Library/Android/sdk" >> $GITHUB_ENV
        echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    # Accept all SDK licenses
    - name: Accept Android SDK Licenses
      run: yes | sdkmanager --licenses

    # Install required SDK packages & emulator image
    - name: Install SDK components
      run: |
        sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-34" "build-tools;34.0.0" "emulator" "system-images;android-34;google_apis;x86_64"

    # Create and start the emulator
    - name: Create & Start Emulator
      run: |
        echo "no" | avdmanager create avd -n test_emulator -k "system-images;android-34;google_apis;x86_64" --device "pixel_6"
        $ANDROID_HOME/emulator/emulator -avd test_emulator -no-snapshot -noaudio -no-boot-anim -gpu swiftshader_indirect &
        adb wait-for-device
        adb shell input keyevent 82

    # Wait for emulator to fully boot
    - name: Wait for Emulator Boot
      run: |
        bootcomplete=""
        until [ "$bootcomplete" = "1" ]; do
          bootcomplete=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
          sleep 5
        done

    # Install & start Appium
    - name: Install Appium
      run: |
        npm install -g appium
        appium -v

    # Run Maven tests
    - name: Run Tests
      run: mvn clean test
