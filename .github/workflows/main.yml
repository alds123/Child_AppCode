name: Run Appium Tests on Android Emulator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  android-test:
    runs-on: self-hosted  # ‚ö†Ô∏è Replace with 'macos-latest' if you're using GitHub-hosted macOS

    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk
      AVD_NAME: test

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: ‚òï Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: üì• Install required SDK components
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-34" \
            "emulator" \
            "system-images;android-34;google_apis;arm64-v8a"

      - name: üõ†Ô∏è Create AVD
        run: |
          mkdir -p $HOME/.android/avd
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n $AVD_NAME \
            -k "system-images;android-34;google_apis;arm64-v8a" \
            --device "pixel"

      - name: üöÄ Start emulator
        run: |
          export PATH=$ANDROID_HOME/emulator:$PATH
          export PATH=$ANDROID_HOME/platform-tools:$PATH
          nohup emulator -avd $AVD_NAME -no-audio -no-window -gpu off &
          adb wait-for-device
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Waiting for emulator to boot..."
            sleep 5
          done
          echo "‚úÖ Emulator booted"

      - name: üß™ Run Appium Tests
        run: mvn clean test
